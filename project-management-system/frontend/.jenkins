pipeline {
    agent any

    environment {
        PROJECT_NAME = "Project Management Application"
        REPO_PATH = "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\first_pipeline"
        FRONTEND_DIR = "project-management-system\\frontend" // Path to frontend
        BACKEND_DIR = "project-management-system\\backend"   // Path to backend
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone the repository into the specified path
                dir("${env.REPO_PATH}") {
                    echo 'Cloning repository...'
                    git url: 'https://github.com/Chahak081/flexiprojectfinal.git', branch: 'main'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                // Install frontend dependencies
                dir("${env.REPO_PATH}\\${env.FRONTEND_DIR}") {
                    echo 'Installing Node.js dependencies for frontend...'
                    bat 'npm install' // Run 'npm install' from the frontend directory
                }
                
                // Install backend dependencies
                dir("${env.REPO_PATH}\\${env.BACKEND_DIR}") {
                    echo 'Installing Node.js dependencies for backend...'
                    bat 'npm install' // Run 'npm install' from the backend directory
                }
            }
        }

        stage('Run Frontend Application') {
            steps {
                dir("${env.REPO_PATH}\\${env.FRONTEND_DIR}") {
                    echo 'Running frontend application...'
                    bat 'npm start' // Run 'npm start' from the frontend directory
                }
            }
        }

        stage('Run Backend Application') {
            steps {
                dir("${env.REPO_PATH}\\${env.BACKEND_DIR}") {
                    echo 'Running backend application...'
                    bat 'npm run serve' // Run 'npm run serve' from the backend directory
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished."
        }
        success {
            echo "The pipeline was successful."
        }
        failure {
            echo "The pipeline failed."
        }
    }
}

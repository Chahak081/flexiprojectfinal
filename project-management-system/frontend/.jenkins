pipeline {
    agent any
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }


    environment {
        PROJECT_NAME = "Project Management Application"
        REPO_PATH = "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\first_pipeline"
        NODE_PATH = "C:\\nodejs\\node.exe"
        NPM_PATH = "C:\\nodejs\\npm.cmd"

        FRONTEND_DIR = "project-management-system\\frontend" // Path to frontend
        BACKEND_DIR = "project-management-system\\backend"   // Path to backend
        CI = 'false'
    }

    stages {
        stage('Source') {
            steps {
                script {
                    echo 'Cloning repository...'
                    git url: 'https://github.com/Chahak081/flexiprojectfinal.git', branch: 'main'
                }
            }
        }
        stage('Checkout Code') {
            steps {
               checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: '9d1659d9-812c-478d-907c-333968a6a13c', url: 'https://github.com/Chahak081/flexiprojectfinal.git']])
            }
        }

        stage('Build') {
            parallel {
          stage('Stage: Install Node.js Dependencies') {
            parallel {
                stage('Install Frontend Dependencies') {
                    steps {
                        dir("${env.REPO_PATH}\\${env.FRONTEND_DIR}") {
                            echo 'Installing Node.js dependencies for frontend...'
                            bat "${env.NPM_PATH} install --legacy-peer-deps"
                        }
                    }
                }
                stage('Install Backend Dependencies') {
                    steps {
                        dir("${env.REPO_PATH}\\${env.BACKEND_DIR}") {
                            echo 'Installing Node.js dependencies for backend...'
                            bat "${env.NPM_PATH} install --legacy-peer-deps"
                        }
                    }
                }
            }
        }

        stage('Stage: Build Frontend') {
            steps {
                dir("${env.REPO_PATH}\\${env.FRONTEND_DIR}") {
                    echo 'Building frontend...'
                    bat "${env.NPM_PATH} run build"
                }
            }
        }

        stage('Stage: Build Backend') {
            steps {
                dir("${env.REPO_PATH}\\${env.BACKEND_DIR}") {
                    echo 'no build required for backend'
                    //bat "${env.NPM_PATH} run build"
                }
            }
        }
    }
}

            }
        }

        // stage('Test') {
//   parallel {
//       stage('Test Frontend') {
//           steps {
//               dir("${env.REPO_PATH}\\${env.FRONTEND_DIR}") {
//                   echo 'Running frontend tests...'
//                   bat 'npm test' // Run frontend tests
//               }
//           }
//       }

//       stage('Test Backend') {
//           steps {
//               dir("${env.REPO_PATH}\\${env.BACKEND_DIR}") {
//                   echo 'Running backend tests...'
//                   // Add backend test command if necessary
//               }
//           }
//       }
//   }
// }
       

    post {
        always {
            echo "Pipeline finished."
        }
        success {
            echo "The pipeline was successful."
        }
        failure {
            echo "The pipeline failed."
        }
    }
}
